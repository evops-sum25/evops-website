/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EventsIndexRouteImport } from './routes/events/index'
import { Route as EventsNewRouteImport } from './routes/events/new'
import { Route as EventsIdRouteImport } from './routes/events/$id'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsIndexRoute = EventsIndexRouteImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsNewRoute = EventsNewRouteImport.update({
  id: '/events/new',
  path: '/events/new',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsIdRoute = EventsIdRouteImport.update({
  id: '/events/$id',
  path: '/events/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/events/$id': typeof EventsIdRoute
  '/events/new': typeof EventsNewRoute
  '/events': typeof EventsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/events/$id': typeof EventsIdRoute
  '/events/new': typeof EventsNewRoute
  '/events': typeof EventsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/events/$id': typeof EventsIdRoute
  '/events/new': typeof EventsNewRoute
  '/events/': typeof EventsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/signup'
    | '/events/$id'
    | '/events/new'
    | '/events'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/profile' | '/signup' | '/events/$id' | '/events/new' | '/events'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/signup'
    | '/events/$id'
    | '/events/new'
    | '/events/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  SignupRoute: typeof SignupRoute
  EventsIdRoute: typeof EventsIdRoute
  EventsNewRoute: typeof EventsNewRoute
  EventsIndexRoute: typeof EventsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events/': {
      id: '/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events/new': {
      id: '/events/new'
      path: '/events/new'
      fullPath: '/events/new'
      preLoaderRoute: typeof EventsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events/$id': {
      id: '/events/$id'
      path: '/events/$id'
      fullPath: '/events/$id'
      preLoaderRoute: typeof EventsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  SignupRoute: SignupRoute,
  EventsIdRoute: EventsIdRoute,
  EventsNewRoute: EventsNewRoute,
  EventsIndexRoute: EventsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
